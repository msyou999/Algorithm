#include <string>
#include <vector>
#include <algorithm>
#include <queue>

using namespace std;

int solution(vector<int> scoville, int K) {
    int answer = 0;
    int tmp1,tmp2 = 0; // tmp1 = 가장 맵지 않은 음식의 스코빌 지수 , tmp2 = 두번째로 맵지 않은 스코빌 지수
    priority_queue<int,vector<int>,greater<int>> pq; //최소힙 선언
    
    for(int i=0; i<scoville.size(); i++){ //최소힙에 scoville 목록 넣어주며 자동 정렬해줌
        pq.push(scoville[i]); 
    }
    
    while(true){
        tmp1 = pq.top(); // 가장 맵지 않은 음식의 스코빌 지수 저장
        pq.pop(); // 섞을 음식이므로 pop으로 삭제
        tmp2 = pq.top(); // 두 번째로 맵지 않은 음식의 스코빌 지수 저장
        pq.pop(); // 섞을 음식이므로 pop으로 삭제
        pq.push(tmp1 +(tmp2*2)); // 두 음식을 섞어서 만든 스코빌 지수를 다시 최소힙에 넣기
        answer++; // 섞은 횟수 +1 증가
        if(pq.top()>=K) // 가장 맵지 않은 음식의 스코빌 지수가 K이상일 경우 빠져나옴
            break;
        else if(pq.size()<=1) // 1개나 0개가 남아있는 경우 -1 출력
            return -1; 
        
    }
    return answer;
}
